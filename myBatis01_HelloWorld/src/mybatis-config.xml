<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- 配置 -->
<configuration>
    <!-- 1.  properties: 属性配置
			<property>: 引入当前配置文件的一个具体的属性配置
			resource: 引入类路径下的属性文件 （主要用这个）
			url:  引入网络路径或者是磁盘路径下的属性文件.
	 -->
    <properties resource="db.properties">
        <!-- <property name="jdbc.driver" value="com.mysql.jdbc.Driver"/> -->
    </properties>

    <!-- 2. settings:  包含了很多重要的设置项 -->
    <settings>
        <!-- 映射下划线到驼峰命名 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!-- 3. typeAliases: 别名处理（可读性不好，使用较少）
		 		<typeAlias>: 给某个java类型取别名,然后在SQL映射文件中就可以直接使用别名了
		 			type: 指定java的全类名
		 			alias:指定别名. 默认的别名就是类名.
		 		<package>:为指定的包以及子包下的类批量取别名(默认别名).
		 				  如果有别名冲突的情况，可以在类上使用@Alias()注解为冲突的类具体指定别名.
	 -->
    <typeAliases>
          <!--<typeAlias type="com.atguigu.mybatis.beans.Book" alias="book"/>-->
        <package name="com.atguigu.mybatis.beans"/>
    </typeAliases>

    <!-- 4. 环境们
        environments: Mybatis支持配置多个环境， 通过 default来指定具体使用的环境.
			environment: 具体的环境
				<transactionManager>: DAO层事务管理
					JDBC   :JdbcTransactionFactory
					MANAGED:ManagedTransactionFactory
					结论: 事务管理将来是交给Spring在业务层(Service层)来做.
				<dataSource>: 数据源
					UNPOOLED :UnpooledDataSourceFactory 不使用连接池
					POOLED   :PooledDataSourceFactory 使用(默认)连接池
					JNDI     :PooledDataSourceFactory 从web应用服务器获取数据
					结论: 数据源将来交给Spring.-->
    <environments default="development">
        <!-- 具体的环境 -->
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 5. 引入Mapper文件
        <mapper>:引入一个SQL映射文件
			 	resource: 引入类路径下的SQL映射文件
		<package>: 批量引入SQL映射文件
			    要求: SQL映射文件 必须与 Mapper接口同名同位置.
    -->
    <mappers>
        <mapper resource="BookMapper.xml"/>
        <mapper resource="AccountMapper.xml"/>
    </mappers>

</configuration>