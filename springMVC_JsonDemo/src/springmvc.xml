<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!-- 1、组件扫描 springmvc全程基于注解开发 -->
    <context:component-scan base-package="com.telecom.springmvc"></context:component-scan>

    <!-- 2、视图解析器
         工作机制：prefix + 请求处理方法的返回值 +suffix = 物理路径
                  /WEB-INF/views/success.jsp
         WEB-INF: 是服务器内部路径，不对浏览器开放，不能直接从浏览器访问该路径下的资源，但是可以从内部转发进行访问
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:default-servlet-handler/>
    <mvc:annotation-driven/>
    <!-- mvc:default-servlet-handler标签
		将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler，
		它会对进入 DispatcherServlet 的请求进行筛查，如果发现是没有经过映射的请求，
		就将该请求交由 WEB 应用服务器默认的 Servlet 处理，如果是由映射的请求，才由 DispatcherServlet 继续处理
		(在没有定义DefaultServletHttpRequestHandler情况下，默认自己定义的DispatcherServlet比Tomcat服务器
		默认的Servlet优先级更高，因此优先处理请求,服务器还定义了一个jsp-servlet，专门用于处理jsp请求)
		如果web应用服务器的默认的Serlvet的名字不叫"default",则需要通过default-servlet-name来进行指定.
		配置了default-serlvet-handler后，RequestMapping的映射会失效，需要加上annotation-driven的配置。
	 -->

</beans>